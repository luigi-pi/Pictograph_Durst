//Head motor
int in1Head = 44;  //on ARDUINO MEGA 
int in2Head = 45;
int limSwHead = 19; //2 normally close limit switches connected in series
int FAST = 16;  //push button
int UP = 17;   //push button
int DOWN = 15; //push button
volatile bool limSwHeadTriggered = false;
// Direction enum and flag
enum Direction { FORWARD, BACKWARD };
Direction currentDirection = FORWARD; // Initialize with default direction
uint8_t PWM_fast =80; //value in % of motor speed
uint8_t PWM_slow =40; //value in % of motor speed
uint8_t PWM_min = 20; //min value of PWM
uint8_t PWM = 0; //changing value of PWM 
unsigned long zeroRef = 0;
uint16_t accel_interval = 10;//time in millis to change the speed in acceleration
uint8_t speedIncrease = 5; //% of speed increase for each accel_interval
uint16_t disengage_ls = 500;  //time in millis to disangage Limitswitch when hit

boolean fastState = false;
boolean upState = false;
boolean downState = false;

//----FUNCTIONS----------------------------------------------------------------------------------------
//INTERRUPTS
void headISR() {
  limSwHeadTriggered = true;
}
void HeadForward(uint8_t PWM) { 
 analogWrite(in1Head, 255);
 analogWrite(in2Head,(255 * (100 - PWM)) / 100); //inverse of the PWM in range 0-255
 currentDirection = FORWARD; // Set direction flag
}
void HeadBackward(uint8_t PWM) {
 analogWrite(in1Head,(255 * (100 - PWM))/ 100); //inverse of the PWM in range 0-255
 analogWrite(in2Head, 255);
 currentDirection = BACKWARD; // Set direction flag 
}
void HeadStop() {
 analogWrite(in1Head,255);
 analogWrite(in2Head, 255);
 PWM=PWM_min; 
}

void HeadCoast() {
 analogWrite(in1Head,0);
 analogWrite(in2Head, 0);
 PWM=PWM_min;  
}
void limSwHit() {
 HeadStop();
 if(currentDirection == FORWARD){
 HeadBackward(PWM_slow);
 }
 else if (currentDirection == BACKWARD){
 HeadForward(PWM_slow);
 }
}
void setup() {
 Serial.begin(9600);
 //head motor
  pinMode(in1Head, OUTPUT);
  pinMode(in2Head, OUTPUT);
 //limitswitch
  pinMode(limSwHead, INPUT_PULLUP);
  attachInterrupt(digitalPinToInterrupt(limSwHead), headISR, RISING); // Trigger on HIGH signal
 //Buttons
  pinMode(FAST,INPUT_PULLUP);
  pinMode(UP,INPUT_PULLUP);
  pinMode(DOWN,INPUT_PULLUP);
 PWM=PWM_min;
}
void loop() {
if(limSwHeadTriggered){
  unsigned long initialMillis = millis();
  limSwHit();
  while(millis()- initialMillis<= disengage_ls){   
    }
  HeadCoast();
  limSwHeadTriggered=digitalRead(limSwHead);
}
// read the state of the pushbutton value, inverted due to pullup resistors:
  upState = !digitalRead(UP);
  downState = !digitalRead(DOWN);
  fastState = !digitalRead(FAST);

  if (upState && !downState && (millis()- zeroRef >= accel_interval)){
    if (PWM < (fastState ? PWM_fast : PWM_slow)) {
     PWM += speedIncrease;
    }
    HeadForward(PWM);
    Serial.println("moving up");
    zeroRef = millis();
  } 
  else if(!upState && downState && (millis()- zeroRef >= accel_interval)) {
    if (PWM < (fastState ? PWM_fast : PWM_slow)) {
     PWM += speedIncrease;
    }
    HeadBackward(PWM);
    Serial.println("moving down:");
    zeroRef = millis();
  }
  else if((!upState && !downState)||(upState && downState)){
   HeadCoast();
  }
}
